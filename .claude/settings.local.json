{
  "permissions": {
    "allow": [
      "Bash(claude --version)",
      "Bash(claude update)",
      "Bash(ls:*)",
      "Bash(npm run dev:*)",
      "Bash(npm install:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(killall:*)",
      "Bash(curl:*)",
      "Bash(find:*)",
      "Bash(rm:*)",
      "Bash(PORT=3001 npm run dev)",
      "Bash(kill:*)",
      "Bash(mkdir:*)",
      "Bash(npx supabase db dump:*)",
      "Bash(cat:*)",
      "Bash(node:*)",
      "Bash(ss:*)",
      "Bash(npx supabase storage:*)",
      "Bash(npx supabase table:*)",
      "Bash(npm run build:*)",
      "Bash(npx tailwindcss:*)",
      "Bash(PORT=4000 npm run dev)",
      "Bash(npx tsc:*)",
      "Bash(npx next lint:*)",
      "Bash(xargs sed:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run:*)",
      "Bash(lsof:*)",
      "Bash(awk:*)",
      "Bash(xargs kill:*)",
      "WebFetch(domain:catalyst.tailwindui.com)",
      "Bash(PORT=3002 npm run dev)",
      "Bash(xargs -r kill -9)",
      "Bash(npx prettier:*)",
      "Bash(git init:*)",
      "Bash(git branch:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git config:*)",
      "Bash(git push:*)",
      "Bash(npx vercel:*)",
      "Bash(chmod:*)",
      "Bash(bash:*)",
      "Bash(git fetch:*)",
      "Bash(git rev-list:*)",
      "Bash(npx next build:*)",
      "Bash(npm:*)",
      "Bash(npx next:*)",
      "Bash(export NODE_OPTIONS='--max-old-space-size=8192')",
      "Bash(PORT=3003 npm run dev)",
      "Bash(export NEXT_TELEMETRY_DISABLED=1)",
      "Bash(sudo rm:*)",
      "Bash(grep:*)",
      "Bash(gh auth:*)",
      "Read(//home/ren/**)",
      "Bash(./deploy.sh)",
      "Bash(git checkout:*)",
      "Bash(python3:*)",
      "Bash(./fix-cookies-await.sh:*)",
      "Bash(npx kill-port:*)",
      "Bash(npx:*)",
      "Bash(claude mcp reconnect:*)",
      "Bash(claude mcp:*)",
      "Bash(uv run:*)",
      "Bash(uv:*)",
      "Bash(uvx:*)",
      "Bash(timeout:*)",
      "mcp__chrome-devtools__navigate_page",
      "mcp__serena__find_symbol",
      "mcp__serena__find_file",
      "mcp__serena__search_for_pattern",
      "mcp__serena__list_dir",
      "mcp__supabase__list_tables",
      "mcp__supabase__list_projects",
      "mcp__supabase__execute_sql",
      "mcp__supabase__apply_migration",
      "mcp__serena__think_about_collected_information",
      "mcp__serena__replace_symbol_body"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "serena",
    "supabase"
  ]
}
